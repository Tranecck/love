import time
import sys
import os

# Cores ANSI para terminal
class Colors:
    RED = '\033[91m'
    PINK = '\033[95m'
    CYAN = '\033[96m'
    RESET = '\033[0m'
    BOLD = '\033[1m'

def slow_print(text, delay=0.05, color=Colors.RESET):
    for char in text:
        sys.stdout.write(f"{color}{char}{Colors.RESET}")
        sys.stdout.flush()
        time.sleep(delay)
    print()

def heart_ascii():
    heart = f"""
{Colors.PINK}      *****       *****     
   *********** ***********  
  ************************* 
 *************************** 
 *************************** 
  *************************  
   ***********************   
     *******************     
       ***************       
         ***********         
           *******           
             ***             
              *{Colors.RESET}
    """
    print(heart)

def poem():
    verses = [
        "Em meio a loops e condi√ß√µes,",
        "meu cora√ß√£o s√≥ compila por voc√™.",
        "Se amor fosse linguagem,",
        "voc√™ seria meu import preferido.",
        "",
        "Nos vetores da vida,",
        "voc√™ √© o √≠ndice que faz sentido.",
        "Nos testes booleanos do destino,",
        "a √∫nica verdade √©: eu + voc√™ == ‚ù§Ô∏è"
    ]
    for verse in verses:
        slow_print(verse, delay=0.08, color=Colors.CYAN)
        time.sleep(0.5)

def clear():
    os.system("cls" if os.name == "nt" else "clear")

def compatibility_test():
    slow_print("Vamos testar nossa compatibilidade com um pequeno quiz üí°", color=Colors.BOLD)
    time.sleep(1)
    score = 0

    questions = [
        {
            "q": "Voc√™ prefere back-end, front-end ou full-stack?",
            "a": ["back-end", "front-end", "full-stack"],
            "ideal": "full-stack"
        },
        {
            "q": "Voc√™ gosta de Python? (s/n)",
            "a": ["s", "n"],
            "ideal": "s"
        },
        {
            "q": "Qual sua IDE favorita? (VSCode/PyCharm/Outro)",
            "a": ["vscode", "pycharm", "outro"],
            "ideal": "pycharm"
        }
    ]

    for item in questions:
        slow_print(f"\n{item['q']}", delay=0.06, color=Colors.PINK)
        answer = input("üëâ ").strip().lower()
        if answer == item["ideal"]:
            slow_print("Perfeito! ‚ù§Ô∏è", color=Colors.CYAN)
            score += 1
        else:
            slow_print("Ok! Ningu√©m √© perfeito... üòÖ", color=Colors.CYAN)

    if score == 3:
        slow_print("\nConclus√£o: Voc√™ √© a soulmate do meu c√≥digo-fonte!", color=Colors.BOLD)
    elif score == 2:
        slow_print("\nTemos um bom match de c√≥digo, hein? üòâ", color=Colors.BOLD)
    else:
        slow_print("\nTalvez precise rodar mais uns testes A/B... üòÖ", color=Colors.BOLD)

def proposal():
    slow_print("\nAgora... uma pergunta final:", delay=0.08, color=Colors.RED)
    time.sleep(1)
    slow_print("Voc√™ aceitaria iniciar uma jornada de commits na vida real comigo? üíç", delay=0.08, color=Colors.PINK)
    answer = input("\nDigite 'sim' para clonar esse reposit√≥rio de amor: ").strip().lower()
    if answer == "sim":
        slow_print("\n‚ù§Ô∏è Git init no nosso reposit√≥rio de amor! ‚ù§Ô∏è", color=Colors.CYAN)
        heart_ascii()
        slow_print("Commit inicial: 'Voc√™ na minha vida'.", color=Colors.BOLD)
    else:
        slow_print("\nTudo bem... talvez numa pr√≥xima branch da vida. üå±", color=Colors.CYAN)

def main():
    clear()
    slow_print("Executando script rom√¢ntico...", delay=0.05, color=Colors.BOLD)
    time.sleep(1)
    clear()
    heart_ascii()
    poem()
    compatibility_test()
    proposal()

if __name__ == "__main__":
    main()
